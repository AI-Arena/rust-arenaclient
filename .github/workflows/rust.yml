name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v2
      with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v2
      with:
          path: target
          key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Build lib
      run: cargo build --lib --verbose      
    - name: Build bin
      run: cargo build --bin rust_ac_bin --no-default-features --verbose
    - name: Run tests
      run: cargo test --verbose --no-default-features
  
  maturin_build:
    needs: [build]
    runs-on: ubuntu-latest
    container: 
      image: konstin2/maturin:master
      options: "-v ${PWD}:/io"
    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v2
      with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v2
      with:
          path: target
          key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-target-${{ hashFiles('**/Cargo.lock') }}
    - name: maturin-build
      run: |
        rustup default stable
        maturin build --release
    - uses: actions/upload-artifact@v2
      name: upload-wheel
      with:
        name: wheel-many-linux
        path: target/wheels
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
